name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Tests y validación de código
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm run test:cov
      
      # Subir reporte de cobertura como artefacto
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
      
      - name: Build application
        run: npm run build

  # Job 2: Build y push de imagen Docker
  docker:
    runs-on: ubuntu-latest
    needs: test  # Solo se ejecuta si el job 'test' fue exitoso
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/devops-api:latest
            ${{ secrets.DOCKER_USERNAME }}/devops-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job 3: Despliegue a Render (solo en push a main)
  deploy:
    runs-on: ubuntu-latest
    needs: docker  # Solo se ejecuta si el job 'docker' fue exitoso
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      # Trigger deploy en Render
      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
      
      - name: Deployment status
        run: |
          echo "Deployment triggered successfully!"
          echo "Check your Render dashboard for deployment progress"